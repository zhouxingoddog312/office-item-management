#help information
function help()
{
	cat<<EOF
---------------------------------------------------------------------------------------------
Usage:
---------------------------------------------------------------------------------------------

EOF
}
#version information
function version()
{
	cat<<EOF
---------------------------------------------------------------------------------------------
Name: office item managements
Version: 0.01
Author: goddog312
contact:1820034020@qq.com
---------------------------------------------------------------------------------------------
EOF
}
#dependencies check
function install_sed()
{
	if command -v sed &>/dev/null
	then
		echo "sed工具已安装。"
	else
		echo "脚本需要sed工具。"
		if command -v apt &>/dev/null
		then
			sudo apt update
			sudo apt install -y sed
		elif command -v dnf &>/dev/null
		then
			sudo dnf install -y sed
		elif command -v yum &>/dev/null
		then
			sudo yum install -y sed
		else
			echo "请手动安装sed工具。"
			exit 1
		fi
		echo "sed工具已安装。"
	fi
}
function install_zenity()
{
	if command -v zenity &>/dev/null
	then
		echo "zenity工具已安装。"
	else
		echo "脚本需要zenity工具。"
#判断包管理器
		if command -v apt &>/dev/null
		then
#使用apt(Debian/Ubuntu)
			sudo apt update
			sudo apt install -y zenity
		elif command -v dnf &>/dev/null
		then
#使用dnf(Fedora)
			sudo dnf install -y zenity
		elif command -v yum &>/dev/null
		then
#使用yum(CentOS/Red Hat)
			sudo yum install -y zenity
		else
			echo "请手动安装zenity工具。"
			exit 1
		fi
		echo "zenity工具已安装。"
	fi
}
#environment check
function check_dir()
{
	if [ ! -d "$1" ]
	then
		echo "目录$1不存在，创建该目录"
		if mkdir -p "$1"
		then
			echo "目录$1已创建"
		else
			echo "目录$1创建失败，请检查相关权限"
			exit 1
		fi
	fi
}
#employee file
function add_employee()
{
#循环是否继续的标记
	local continue_entry=true
	while $continue_entry
	do
#文件存在就输出职工名单，不存在就输出尚未录入
		if [ -f "$EMPLOYEE_FILE" ]
		then
			local existing_employees=$(cat "$EMPLOYEE_FILE"|sed 's/^/· /')
			local display_text="现有职工：\n$existing_employees\n\n请输入新职工姓名："
		else
			local display_text="尚未录入职工姓名，请添加第一位职工的姓名："
		fi
#显示职工名单并询问录入姓名
		new_employee=$(zenity --entry --title="添加职工" --text="$display_text" --entry-text "" 2>/dev/null)
		if [ $? -ne 0 ]
		then
			zenity --info --title="取消" --text="已取消添加职工" 2>/dev/null
#取消录入就直接推出循环			
			break
		elif [ -z $new_employee ]
		then
			zenity --warning --title="注意" --text="职工姓名不能为空" 2>/dev/null
			continue
		fi
#将姓名存入指定文件，待加入重复姓名的判断
		echo "$new_employee" >> "$EMPLOYEE_FILE"
#添加日志
		echo "$(date +'%Y-%m-%d %H:%M:%S') - 添加员工: $new_employee" >&8
		existing_employees=$(cat "$EMPLOYEE_FILE"|sed 's/^/· /')
		display_text="现有职工：\n$existing_employees\n\n是否继续添加其他职工："
#显示现有职工名单并询问是否继续
		zenity --question --ellipsize --title="继续添加" --text="$display_text" 2>/dev/null
		if [ $? -ne 0 ]
		then
			continue_entry=false
			zenity --info --title="完成" --text="职工添加完毕" 2>/dev/null
		fi
	done
}
function del_employee()
{
	local continue_del=true
	local selected
	local display_text
	if [ ! -f "$EMPLOYEE_FILE" ]
	then
		zenity --info --title="注意" --text="职工名单文件不存在，无法执行删除，请先添加职工名单。" 2>/dev/null
		return
	fi
	if [ ! -s "$EMPLOYEE_FILE" ]
	then
		zenity --info --title="注意" --text="职工名单文件为空，无法执行删除，请先添加职工名单。" 2>/dev/null
		return
	fi
	while $continue_del
	do
		selected=$(zenity --list --title="删除职工" --text="请选择要删除的职工：" --column="职工姓名" $(cat "$EMPLOYEE_FILE") 2>/dev/null)
		if [ $? -ne 0 ]||[ -z "$selected" ]
		then
			zenity --info --title="注意" --text="已取消删除操作" 2>/dev/null
			break
		fi
		grep -v "$selected" "$EMPLOYEE_FILE" > "$EMPLOYEE_FILE.tmp" && mv "$EMPLOYEE_FILE.tmp" "$EMPLOYEE_FILE"
		echo "$(date +'%Y-%m-%d %H:%M:%S') - 删除职工: $selected" >&8
		zenity --info --title="已删除" --text="职工'$selected'已成功删除。" 2>/dev/null
		if [ ! -s "$EMPLOYEE_FILE" ]
		then
			zenity --info --title="注意" --text="职工名单文件已为空，无法继续删除。" 2>/dev/null
			break
		fi
		display_text=$(cat "$EMPLOYEE_FILE")
		zenity --question --title="继续删除" --text="当前职工名单：\n$display_text\n\n是否继续删除？" 2>/dev/null
		if [ $? -ne 0 ]
		then
			continue_del=false
			zenity --info --title="完成" --text="删除操作已完成" 2>/dev/null
		fi
	done
}
